/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")();
const UploadPageIndexLazyImport = createFileRoute("/uploadPage/")();
const CreateListingIndexLazyImport = createFileRoute("/createListing/")();

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
   id: "/",
   path: "/",
   getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then(d => d.Route));

const UploadPageIndexLazyRoute = UploadPageIndexLazyImport.update({
   id: "/uploadPage/",
   path: "/uploadPage/",
   getParentRoute: () => rootRoute,
} as any).lazy(() =>
   import("./routes/upload-page/index.lazy").then(d => d.Route)
);

const CreateListingIndexLazyRoute = CreateListingIndexLazyImport.update({
   id: "/createListing/",
   path: "/createListing/",
   getParentRoute: () => rootRoute,
} as any).lazy(() =>
   import("./routes/create-listing/index.lazy").then(d => d.Route)
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
   interface FileRoutesByPath {
      "/": {
         id: "/";
         path: "/";
         fullPath: "/";
         preLoaderRoute: typeof IndexLazyImport;
         parentRoute: typeof rootRoute;
      };
      "/createListing/": {
         id: "/createListing/";
         path: "/createListing";
         fullPath: "/createListing";
         preLoaderRoute: typeof CreateListingIndexLazyImport;
         parentRoute: typeof rootRoute;
      };
      "/uploadPage/": {
         id: "/uploadPage/";
         path: "/uploadPage";
         fullPath: "/uploadPage";
         preLoaderRoute: typeof UploadPageIndexLazyImport;
         parentRoute: typeof rootRoute;
      };
   }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
   "/": typeof IndexLazyRoute;
   "/createListing": typeof CreateListingIndexLazyRoute;
   "/uploadPage": typeof UploadPageIndexLazyRoute;
}

export interface FileRoutesByTo {
   "/": typeof IndexLazyRoute;
   "/createListing": typeof CreateListingIndexLazyRoute;
   "/uploadPage": typeof UploadPageIndexLazyRoute;
}

export interface FileRoutesById {
   __root__: typeof rootRoute;
   "/": typeof IndexLazyRoute;
   "/createListing/": typeof CreateListingIndexLazyRoute;
   "/uploadPage/": typeof UploadPageIndexLazyRoute;
}

export interface FileRouteTypes {
   fileRoutesByFullPath: FileRoutesByFullPath;
   fullPaths: "/" | "/createListing" | "/uploadPage";
   fileRoutesByTo: FileRoutesByTo;
   to: "/" | "/createListing" | "/uploadPage";
   id: "__root__" | "/" | "/createListing/" | "/uploadPage/";
   fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
   IndexLazyRoute: typeof IndexLazyRoute;
   CreateListingIndexLazyRoute: typeof CreateListingIndexLazyRoute;
   UploadPageIndexLazyRoute: typeof UploadPageIndexLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
   IndexLazyRoute: IndexLazyRoute,
   CreateListingIndexLazyRoute: CreateListingIndexLazyRoute,
   UploadPageIndexLazyRoute: UploadPageIndexLazyRoute,
};

export const routeTree = rootRoute
   ._addFileChildren(rootRouteChildren)
   ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/createListing/",
        "/uploadPage/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/createListing/": {
      "filePath": "createListing/index.lazy.tsx"
    },
    "/uploadPage/": {
      "filePath": "uploadPage/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
