/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ListingIndexImport } from './routes/listing/index'
import { Route as ListingListingIdIndexImport } from './routes/listing/$listingId/index'
import { Route as ListingListingIdEditIndexImport } from './routes/listing/$listingId/edit/index'

// Create Virtual Routes

const UploadPageIndexLazyImport = createFileRoute('/upload-page/')()
const CreateListingIndexLazyImport = createFileRoute('/create-listing/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UploadPageIndexLazyRoute = UploadPageIndexLazyImport.update({
  id: '/upload-page/',
  path: '/upload-page/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/upload-page/index.lazy').then((d) => d.Route),
)

const CreateListingIndexLazyRoute = CreateListingIndexLazyImport.update({
  id: '/create-listing/',
  path: '/create-listing/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/create-listing/index.lazy').then((d) => d.Route),
)

const ListingIndexRoute = ListingIndexImport.update({
  id: '/listing/',
  path: '/listing/',
  getParentRoute: () => rootRoute,
} as any)

const ListingListingIdIndexRoute = ListingListingIdIndexImport.update({
  id: '/listing/$listingId/',
  path: '/listing/$listingId/',
  getParentRoute: () => rootRoute,
} as any)

const ListingListingIdEditIndexRoute = ListingListingIdEditIndexImport.update({
  id: '/listing/$listingId/edit/',
  path: '/listing/$listingId/edit/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/listing/': {
      id: '/listing/'
      path: '/listing'
      fullPath: '/listing'
      preLoaderRoute: typeof ListingIndexImport
      parentRoute: typeof rootRoute
    }
    '/create-listing/': {
      id: '/create-listing/'
      path: '/create-listing'
      fullPath: '/create-listing'
      preLoaderRoute: typeof CreateListingIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/upload-page/': {
      id: '/upload-page/'
      path: '/upload-page'
      fullPath: '/upload-page'
      preLoaderRoute: typeof UploadPageIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/listing/$listingId/': {
      id: '/listing/$listingId/'
      path: '/listing/$listingId'
      fullPath: '/listing/$listingId'
      preLoaderRoute: typeof ListingListingIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/listing/$listingId/edit/': {
      id: '/listing/$listingId/edit/'
      path: '/listing/$listingId/edit'
      fullPath: '/listing/$listingId/edit'
      preLoaderRoute: typeof ListingListingIdEditIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/listing': typeof ListingIndexRoute
  '/create-listing': typeof CreateListingIndexLazyRoute
  '/upload-page': typeof UploadPageIndexLazyRoute
  '/listing/$listingId': typeof ListingListingIdIndexRoute
  '/listing/$listingId/edit': typeof ListingListingIdEditIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/listing': typeof ListingIndexRoute
  '/create-listing': typeof CreateListingIndexLazyRoute
  '/upload-page': typeof UploadPageIndexLazyRoute
  '/listing/$listingId': typeof ListingListingIdIndexRoute
  '/listing/$listingId/edit': typeof ListingListingIdEditIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/listing/': typeof ListingIndexRoute
  '/create-listing/': typeof CreateListingIndexLazyRoute
  '/upload-page/': typeof UploadPageIndexLazyRoute
  '/listing/$listingId/': typeof ListingListingIdIndexRoute
  '/listing/$listingId/edit/': typeof ListingListingIdEditIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/listing'
    | '/create-listing'
    | '/upload-page'
    | '/listing/$listingId'
    | '/listing/$listingId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/listing'
    | '/create-listing'
    | '/upload-page'
    | '/listing/$listingId'
    | '/listing/$listingId/edit'
  id:
    | '__root__'
    | '/'
    | '/listing/'
    | '/create-listing/'
    | '/upload-page/'
    | '/listing/$listingId/'
    | '/listing/$listingId/edit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ListingIndexRoute: typeof ListingIndexRoute
  CreateListingIndexLazyRoute: typeof CreateListingIndexLazyRoute
  UploadPageIndexLazyRoute: typeof UploadPageIndexLazyRoute
  ListingListingIdIndexRoute: typeof ListingListingIdIndexRoute
  ListingListingIdEditIndexRoute: typeof ListingListingIdEditIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ListingIndexRoute: ListingIndexRoute,
  CreateListingIndexLazyRoute: CreateListingIndexLazyRoute,
  UploadPageIndexLazyRoute: UploadPageIndexLazyRoute,
  ListingListingIdIndexRoute: ListingListingIdIndexRoute,
  ListingListingIdEditIndexRoute: ListingListingIdEditIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/listing/",
        "/create-listing/",
        "/upload-page/",
        "/listing/$listingId/",
        "/listing/$listingId/edit/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/listing/": {
      "filePath": "listing/index.tsx"
    },
    "/create-listing/": {
      "filePath": "create-listing/index.lazy.tsx"
    },
    "/upload-page/": {
      "filePath": "upload-page/index.lazy.tsx"
    },
    "/listing/$listingId/": {
      "filePath": "listing/$listingId/index.tsx"
    },
    "/listing/$listingId/edit/": {
      "filePath": "listing/$listingId/edit/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
